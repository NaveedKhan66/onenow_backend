# Generated by Django 5.2.4 on 2025-07-12 10:12

import core.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(help_text='Vehicle manufacturer', max_length=50)),
                ('model', models.CharField(help_text='Vehicle model', max_length=50)),
                ('year', models.IntegerField(help_text='Manufacturing year', validators=[core.validators.validate_year])),
                ('plate_number', models.CharField(help_text='License plate number', max_length=10, unique=True, validators=[core.validators.validate_license_plate])),
                ('color', models.CharField(blank=True, max_length=30)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('hybrid', 'Hybrid'), ('electric', 'Electric'), ('cng', 'CNG')], default='petrol', max_length=20)),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('semi_automatic', 'Semi-Automatic')], default='manual', max_length=20)),
                ('body_type', models.CharField(choices=[('sedan', 'Sedan'), ('hatchback', 'Hatchback'), ('suv', 'SUV'), ('coupe', 'Coupe'), ('convertible', 'Convertible'), ('wagon', 'Wagon'), ('pickup', 'Pickup'), ('van', 'Van')], default='sedan', max_length=20)),
                ('engine_capacity', models.DecimalField(blank=True, decimal_places=2, help_text='Engine capacity in liters', max_digits=4, null=True)),
                ('seating_capacity', models.PositiveIntegerField(default=4, help_text='Number of seats', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('features', models.JSONField(blank=True, default=list, help_text='List of vehicle features (AC, GPS, etc.)')),
                ('daily_rate', models.DecimalField(decimal_places=2, help_text='Daily rental rate', max_digits=8)),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0, help_text='Security deposit amount', max_digits=8)),
                ('mileage_limit', models.PositiveIntegerField(default=100, help_text='Daily mileage limit in kilometers')),
                ('status', models.CharField(choices=[('available', 'Available'), ('rented', 'Rented'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive')], default='available', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=100)),
                ('insurance_expiry', models.DateField(blank=True, null=True)),
                ('registration_expiry', models.DateField(blank=True, null=True)),
                ('last_service_date', models.DateField(blank=True, null=True)),
                ('pickup_location', models.CharField(help_text='Default pickup location', max_length=200)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'db_table': 'vehicles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Vehicle image', upload_to='vehicles/')),
                ('caption', models.CharField(blank=True, max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Image',
                'verbose_name_plural': 'Vehicle Images',
                'db_table': 'vehicle_images',
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_reviews', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Review',
                'verbose_name_plural': 'Vehicle Reviews',
                'db_table': 'vehicle_reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['owner', 'status'], name='vehicles_owner_i_4ab853_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['make', 'model'], name='vehicles_make_17021f_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['plate_number'], name='vehicles_plate_n_de64b1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vehiclereview',
            unique_together={('vehicle', 'reviewer')},
        ),
    ]
